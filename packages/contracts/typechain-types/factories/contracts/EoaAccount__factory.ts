/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EoaAccount,
  EoaAccountInterface,
} from "../../contracts/EoaAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "StringsInsufficientHexLength",
    type: "error",
  },
  {
    inputs: [],
    name: "accountData",
    outputs: [
      {
        internalType: "bytes32",
        name: "accountId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "authProviderId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "publicKeyRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "proofVerifier",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "r",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "s",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.Signature",
        name: "signature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "authenticatorData",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "clientDataJSON",
            type: "string",
          },
          {
            internalType: "uint16",
            name: "challengeIndex",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "typeIndex",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "userVerificationRequired",
            type: "bool",
          },
        ],
        internalType: "struct WebAuthnP256.Metadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getWebAuthnPublicKey",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.PublicKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "jwtIat",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "jwtNonce",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "publicKeyHash",
            type: "bytes32",
          },
        ],
        internalType: "struct ZkLogin.VerificationData",
        name: "verificationData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.PublicKey",
        name: "newP256PublicKey",
        type: "tuple",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSA.PublicKey",
        name: "webauthnPublicKey_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "accountId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "authProviderId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "publicKeyRegistry",
            type: "address",
          },
          {
            internalType: "address",
            name: "proofVerifier",
            type: "address",
          },
        ],
        internalType: "struct ZkLogin.AccountData",
        name: "accountData_",
        type: "tuple",
      },
    ],
    name: "setAccountId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "webauthnPublicKey",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506118d28061001f6000396000f3fe6080604052600436106100745760003560e01c8063affed0e01161004e578063affed0e01461014f578063bb3da92d14610173578063c389ca27146101be578063ff07203e146101de57600080fd5b8063041c9ae6146100805780637a28f8bc146100a25780637dc0872e1461011f57600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b36600461107b565b6101fe565b005b3480156100ae57600080fd5b506000546001546002546003546100de93929173ffffffffffffffffffffffffffffffffffffffff908116911684565b60408051948552602085019390935273ffffffffffffffffffffffffffffffffffffffff918216928401929092521660608201526080015b60405180910390f35b34801561012b57600080fd5b5060055460065461013a919082565b60408051928352602083019190915201610116565b34801561015b57600080fd5b5061016560045481565b604051908152602001610116565b34801561017f57600080fd5b50604080518082018252600080825260209182015281518083018352600554808252600654918301918252835190815290519181019190915201610116565b3480156101ca57600080fd5b506100a06101d936600461110a565b610369565b3480156101ea57600080fd5b506100a06101f9366004611250565b6104d1565b604080518235602080830191909152830135818301529083013590606001604051602081830303815290604052805190602001201461029e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f696e76616c696420576562417574686e207075626c6963206b6579000000000060448201526064015b60405180910390fd5b604080516080810182526000548152600154602082015260025473ffffffffffffffffffffffffffffffffffffffff9081169282019290925260035490911660608201526102f4906102ef8461139f565b6105b1565b61035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f696e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610295565b80356005556020013560065550565b600480546000918261037a83611433565b919050558787878760405160200161039695949392919061146b565b6040516020818303038152906040528051906020012090506103e781836103bc90611514565b6103cb368790038701876115cd565b60408051808201909152600554815260065460208201526108af565b6103f057600080fd5b60008773ffffffffffffffffffffffffffffffffffffffff1685888860405161041a92919061161e565b60006040518083038185875af1925050503d8060008114610457576040519150601f19603f3d011682016040523d82523d6000602084013e61045c565b606091505b50509050806104c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f63616c6c206661696c65640000000000000000000000000000000000000000006044820152606401610295565b5050505050505050565b33301461053a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6e6f742073656c660000000000000000000000000000000000000000000000006044820152606401610295565b81356005556020918201356006558051600055908101516001556040810151600280547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617909155606090920151600380549093169116179055565b6000826040015173ffffffffffffffffffffffffffffffffffffffff16635879142a846020015184606001516040518363ffffffff1660e01b8152600401610603929190918252602082015260400190565b602060405180830381865afa158015610620573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610644919061162e565b6106aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f7075626c6963206b65792068617368206d69736d6174636800000000000000006044820152606401610295565b60006106b98360400151610ae1565b80519091506003906000906106ce908361164b565b67ffffffffffffffff8111156106e6576106e66111d5565b60405190808252806020026020018201604052801561070f578160200160208202803683370190505b508651909150600090828261072381611433565b9350815181106107355761073561165e565b602002602001018181525050856020015160001b82828061075590611433565b9350815181106107675761076761165e565b60209081029190910101526060860151828261078281611433565b9350815181106107945761079461165e565b60200260200101818152505060005b84518110156107f6578481815181106107be576107be61165e565b016020015160f81c83836107d181611433565b9450815181106107e3576107e361165e565b60209081029190910101526001016107a3565b50815181146108075761080761168d565b606087015186516040517fea50d0e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163ea50d0e4916108619186906004016116e0565b602060405180830381865afa15801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a2919061162e565b9450505050505b92915050565b6000602584600001515110806108f157506108ef84600001516020815181106108da576108da61165e565b602001015160f81c60f81b8560800151610aee565b155b156108fe57506000610ad9565b60006040518060400160405280601581526020017f2274797065223a22776562617574686e2e676574220000000000000000000000815250905061094f818660200151876060015161ffff16610be0565b61095d576000915050610ad9565b600061098c8760405160200161097591815260200190565b604051602081830303815290604052600180610cc1565b90506000816040516020016109a1919061177a565b60405160208183030381529060405290506109c9818860200151896040015161ffff16610be0565b6109d95760009350505050610ad9565b6000600288602001516040516109ef91906117e6565b602060405180830381855afa158015610a0c573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610a2f9190611802565b905060006002896000015183604051602001610a4c92919061181b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610a84916117e6565b602060405180830381855afa158015610aa1573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610ac49190611802565b9050610ad1818989610dd2565b955050505050505b949350505050565b60606108a9826020610f0c565b60007f010000000000000000000000000000000000000000000000000000000000000083811614610b21575060006108a9565b818015610b5057507f040000000000000000000000000000000000000000000000000000000000000083811614155b15610b5d575060006108a9565b7f080000000000000000000000000000000000000000000000000000000000000083811614610bd7577ff0000000000000000000000000000000000000000000000000000000000000007f1000000000000000000000000000000000000000000000000000000000000000841601610bd7575060006108a9565b50600192915050565b825182516000918591859190845b82811015610cb05781610c01828961164b565b10610c1457600095505050505050610cba565b83610c1f828961164b565b81518110610c2f57610c2f61165e565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916858281518110610c6e57610c6e61165e565b01602001517fff000000000000000000000000000000000000000000000000000000000000001614610ca857600095505050505050610cba565b600101610bee565b5060019450505050505b9392505050565b606083518015610dca576003600282010460021b60405192507f4142434445464748494a4b4c4d4e4f505152535455565758595a616263646566601f526106708515027f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f18603f52602083018181018388602001018051600082525b60038a0199508951603f8160121c1651600053603f81600c1c1651600153603f8160061c1651600253603f811651600353506000518452600484019350828410610d3d5790526020016040527f3d3d000000000000000000000000000000000000000000000000000000000000600384066002048083039190915260008615159091029182900352900382525b509392505050565b8151602080840151835184830151604080519485018990528401949094526060830191909152608082015260a08101919091526000908190819060149060c001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610e4a916117e6565b600060405180830381855afa9150503d8060008114610e85576040519150601f19603f3d011682016040523d82523d6000602084013e610e8a565b606091505b5091509150818015610e9d575080516020145b8015610f02575080601f81518110610eb757610eb761165e565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167f0100000000000000000000000000000000000000000000000000000000000000145b9695505050505050565b6060826000610f1c84600261183d565b67ffffffffffffffff811115610f3457610f346111d5565b6040519080825280601f01601f191660200182016040528015610f5e576020820181803683370190505b5090506000610f6e85600261183d565b610f7990600161164b565b90505b6001811115611020577f303132333435363738396162636465660000000000000000000000000000000083600f1660108110610fba57610fba61165e565b1a60f81b82610fca600284611854565b81518110610fda57610fda61165e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049290921c9161101981611867565b9050610f7c565b508115610ad9576040517fe22e27eb0000000000000000000000000000000000000000000000000000000081526004810186905260248101859052604401610295565b60006040828403121561107557600080fd5b50919050565b6000806060838503121561108e57600080fd5b823567ffffffffffffffff8111156110a557600080fd5b8301608081860312156110b757600080fd5b91506110c68460208501611063565b90509250929050565b803573ffffffffffffffffffffffffffffffffffffffff811681146110f357600080fd5b919050565b600060a0828403121561107557600080fd5b60008060008060008060c0878903121561112357600080fd5b61112c876110cf565b9550602087013567ffffffffffffffff81111561114857600080fd5b8701601f8101891361115957600080fd5b803567ffffffffffffffff81111561117057600080fd5b89602082840101111561118257600080fd5b60209190910195509350604087013592506111a08860608901611063565b915060a087013567ffffffffffffffff8111156111bc57600080fd5b6111c889828a016110f8565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611227576112276111d5565b60405290565b60405160a0810167ffffffffffffffff81118282101715611227576112276111d5565b60008082840360c081121561126457600080fd5b61126e8585611063565b925060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0820112156112a057600080fd5b506112a9611204565b60408401358152606084013560208201526112c6608085016110cf565b60408201526112d760a085016110cf565b6060820152809150509250929050565b60008067ffffffffffffffff841115611302576113026111d5565b506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85018116603f0116810181811067ffffffffffffffff8211171561134f5761134f6111d5565b60405283815290508082840185101561136757600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261139057600080fd5b610cba838335602085016112e7565b6000608082360312156113b157600080fd5b6113b9611204565b823567ffffffffffffffff8111156113d057600080fd5b6113dc3682860161137f565b8252506020838101359082015260408084013590820152606092830135928101929092525090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361146457611464611404565b5060010190565b85815273ffffffffffffffffffffffffffffffffffffffff8516602082015260806040820152826080820152828460a0830137600060a08483010152600060a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011683010190508260608301529695505050505050565b803561ffff811681146110f357600080fd5b801515811461150657600080fd5b50565b80356110f3816114f8565b600060a0823603121561152657600080fd5b61152e61122d565b823567ffffffffffffffff81111561154557600080fd5b6115513682860161137f565b825250602083013567ffffffffffffffff81111561156e57600080fd5b830136601f82011261157f57600080fd5b61158e368235602084016112e7565b6020830152506115a0604084016114e6565b60408201526115b1606084016114e6565b60608201526115c260808401611509565b608082015292915050565b600060408284031280156115e057600080fd5b506040805190810167ffffffffffffffff81118282101715611604576116046111d5565b604052823581526020928301359281019290925250919050565b8183823760009101908152919050565b60006020828403121561164057600080fd5b8151610cba816114f8565b808201808211156108a9576108a9611404565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60005b838110156116d75781810151838201526020016116bf565b50506000910152565b60408152600083518060408401526116ff8160608501602088016116bc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201828103606090810160208086019190915285519183018290528501916000916080909101905b8083101561176f578351825260208201915060208401935060018301925061174c565b509695505050505050565b7f226368616c6c656e6765223a22000000000000000000000000000000000000008152600082516117b281600d8501602087016116bc565b7f2200000000000000000000000000000000000000000000000000000000000000600d939091019283015250600e01919050565b600082516117f88184602087016116bc565b9190910192915050565b60006020828403121561181457600080fd5b5051919050565b6000835161182d8184602088016116bc565b9190910191825250602001919050565b80820281158282048414176108a9576108a9611404565b818103818111156108a9576108a9611404565b60008161187657611876611404565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea26469706673582212200f13d9d851d2190cfbe947e89c27b152eef4ae0ea84ce51cb3027758d574341a64736f6c634300081b0033";

type EoaAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EoaAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EoaAccount__factory extends ContractFactory {
  constructor(...args: EoaAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EoaAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EoaAccount__factory {
    return super.connect(runner) as EoaAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EoaAccountInterface {
    return new Interface(_abi) as EoaAccountInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EoaAccount {
    return new Contract(address, _abi, runner) as unknown as EoaAccount;
  }
}
